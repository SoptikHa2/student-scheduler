Bridge.assembly("StudentScheduler",function(){"use strict";Bridge.define("StudentScheduler.App",{main:function(){var butNewTeacher,butNewStudent,buts,i,i1,i2,c;for(StudentScheduler.App.plan=new StudentScheduler.AppLogic.Plan,butNewTeacher=StudentScheduler.App.Gid("add-teacher"),butNewTeacher.onclick=Bridge.fn.combine(butNewTeacher.onclick,function(){StudentScheduler.App.AddNewTeacher(butNewTeacher)}),butNewStudent=StudentScheduler.App.Gid("add-student"),butNewStudent.onclick=Bridge.fn.combine(butNewStudent.onclick,function(){StudentScheduler.App.AddNewStudent(butNewStudent)}),buts=StudentScheduler.App.Gcl("teacher-click"),i=0;i<buts.length;i=i+1|0)buts[System.Array.index(i,buts)].onclick=Bridge.fn.combine(buts[System.Array.index(i,buts)].onclick,function(){StudentScheduler.App.EditHoursClick(buts[System.Array.index(i,buts)],!0)});for(buts=StudentScheduler.App.Gcl("student-click"),i1=0;i1<buts.length;i1=i1+1|0)buts[System.Array.index(i1,buts)].onclick=Bridge.fn.combine(buts[System.Array.index(i1,buts)].onclick,function(){StudentScheduler.App.EditHoursClick(buts[System.Array.index(i1,buts)],!1)});for(buts=StudentScheduler.App.Gcl("but-time-set"),i2=0;i2<buts.length;i2=i2+1|0)c={v:i2},buts[System.Array.index(i2,buts)].onclick=Bridge.fn.combine(buts[System.Array.index(i2,buts)].onclick,function($me,c){return function(){StudentScheduler.App.SomeDayEditHoursClick(buts[System.Array.index(c.v,buts)])}}(this,c));StudentScheduler.App.Gid("set-time-hours").onclick=function(){StudentScheduler.App.SaveHourChange()};StudentScheduler.App.Gid("set-time-hours-cancel").onclick=function(){StudentScheduler.App.RemoveHourInDay()}},statics:{fields:{plan:null,lastSetWasTeacher:!1,lastSetId:0,lastSelectedDay:0,dayId:0},methods:{AddNewTeacher:function(sender){var input=Bridge.as(System.Linq.Enumerable.from(sender.parentElement.parentElement.getElementsByClassName("form-group")[0].children).where(function(x){return Bridge.referenceEquals(x.id,"teacher-name")}).first(),HTMLInputElement),newTeacherName=input.value,div,card,setHours;Bridge.referenceEquals(newTeacherName,"")||(StudentScheduler.App.plan.teachers.add(new StudentScheduler.AppLogic.User(newTeacherName,System.Array.init(5,!1,System.Boolean),System.Array.init(5,0,System.Int32),System.Array.init(5,0,System.Int32))),div=StudentScheduler.App.Gid("teachers"),card=document.createElement("div"),card.className="card card-body",card.innerHTML=(card.innerHTML||"")+("<p><strong>"+(newTeacherName||"")+"<\/strong><\/p>"||""),setHours=document.createElement("button"),setHours.name=(StudentScheduler.App.plan.teachers.Count-1|0).toString(),setHours.className="btn btn-primary teacher-click",setHours.setAttribute("data-toggle","modal"),setHours.setAttribute("data-target","#setHoursModal"),setHours.innerHTML="Nastavit hodiny",setHours.onclick=Bridge.fn.combine(setHours.onclick,function(){StudentScheduler.App.EditHoursClick(setHours,!0)}),card.appendChild(setHours),div.appendChild(card),input.value="")},AddNewStudent:function(sender){var input=Bridge.as(System.Linq.Enumerable.from(sender.parentElement.parentElement.getElementsByClassName("form-group")[0].children).where(function(x){return Bridge.referenceEquals(x.id,"student-name")}).first(),HTMLInputElement),newStudentName=input.value,div,card,setHours;Bridge.referenceEquals(newStudentName,"")||(StudentScheduler.App.plan.students.add(new StudentScheduler.AppLogic.User(newStudentName,System.Array.init(5,!1,System.Boolean),System.Array.init(5,0,System.Int32),System.Array.init(5,0,System.Int32))),div=StudentScheduler.App.Gid("students"),card=document.createElement("div"),card.className="card card-body",card.innerHTML=(card.innerHTML||"")+("<p><strong>"+(newStudentName||"")+"<\/strong><\/p>"||""),setHours=document.createElement("button"),setHours.name=(StudentScheduler.App.plan.teachers.Count-1|0).toString(),setHours.className="btn btn-primary teacher-click",setHours.setAttribute("data-toggle","modal"),setHours.setAttribute("data-target","#setHoursModal"),setHours.innerHTML="Nastavit hodiny",setHours.onclick=Bridge.fn.combine(setHours.onclick,function(){StudentScheduler.App.EditHoursClick(setHours,!0)}),card.appendChild(setHours),div.appendChild(card),input.value="")},EditHoursClick:function(sender,wasTeacher){StudentScheduler.App.lastSetWasTeacher=wasTeacher;StudentScheduler.App.lastSetId=System.Int32.parse(Bridge.as(sender,HTMLElement).getAttribute("name"));var selectedCollection=wasTeacher?StudentScheduler.App.plan.teachers:StudentScheduler.App.plan.students;StudentScheduler.App.Gid("set-time-monday").innerHTML=selectedCollection.getItem(StudentScheduler.App.lastSetId).GetHoursInDay(0);StudentScheduler.App.Gid("set-time-tuesday").innerHTML=selectedCollection.getItem(StudentScheduler.App.lastSetId).GetHoursInDay(1);StudentScheduler.App.Gid("set-time-wednesday").innerHTML=selectedCollection.getItem(StudentScheduler.App.lastSetId).GetHoursInDay(2);StudentScheduler.App.Gid("set-time-thursday").innerHTML=selectedCollection.getItem(StudentScheduler.App.lastSetId).GetHoursInDay(3);StudentScheduler.App.Gid("set-time-friday").innerHTML=selectedCollection.getItem(StudentScheduler.App.lastSetId).GetHoursInDay(4);StudentScheduler.App.Gid("setTimeModalInfoText").innerHTML="V tento den má "+(selectedCollection.getItem(StudentScheduler.App.lastSetId).name||"")+" čas"},SomeDayEditHoursClick:function(sender){var hoursFrom,hoursTo;StudentScheduler.App.dayId=System.Int32.parse(Bridge.as(sender,HTMLElement).getAttribute("name"));var getTimeFromHH=Bridge.as(StudentScheduler.App.Gid("get-time-from-hh"),HTMLInputElement),getTimeFromMM=Bridge.as(StudentScheduler.App.Gid("get-time-from-mm"),HTMLInputElement),getTimeToHH=Bridge.as(StudentScheduler.App.Gid("get-time-to-hh"),HTMLInputElement),getTimeToMM=Bridge.as(StudentScheduler.App.Gid("get-time-to-mm"),HTMLInputElement),collection=StudentScheduler.App.lastSetWasTeacher?StudentScheduler.App.plan.teachers:StudentScheduler.App.plan.students,usr=collection.getItem(StudentScheduler.App.lastSetId);usr.minutesFromAvailable[System.Array.index(StudentScheduler.App.dayId,usr.minutesFromAvailable)]>0?(hoursFrom=Bridge.Int.clip32(Math.floor(usr.minutesFromAvailable[System.Array.index(StudentScheduler.App.dayId,usr.minutesFromAvailable)]/60)),getTimeFromHH.value=hoursFrom.toString(),getTimeFromMM.value=(usr.minutesFromAvailable[System.Array.index(StudentScheduler.App.dayId,usr.minutesFromAvailable)]-Bridge.Int.mul(hoursFrom,60)|0).toString()):(getTimeFromHH.value="",getTimeFromMM.value="");usr.minutesToAvailable[System.Array.index(StudentScheduler.App.dayId,usr.minutesToAvailable)]>0?(hoursTo=Bridge.Int.clip32(Math.floor(usr.minutesToAvailable[System.Array.index(StudentScheduler.App.dayId,usr.minutesToAvailable)]/60)),getTimeToHH.value=hoursTo.toString(),getTimeToMM.value=System.Double.format(usr.minutesToAvailable[System.Array.index(StudentScheduler.App.dayId,usr.minutesToAvailable)]-hoursTo*60)):(getTimeToHH.value="",getTimeToMM.value="")},SaveHourChange:function(){var $t,$t1,collection=StudentScheduler.App.lastSetWasTeacher?StudentScheduler.App.plan.teachers:StudentScheduler.App.plan.students,from=Bridge.Int.clip32(Bridge.as(StudentScheduler.App.Gid("get-time-from-hh"),HTMLInputElement).valueAsNumber*60+Bridge.as(StudentScheduler.App.Gid("get-time-from-mm"),HTMLInputElement).valueAsNumber),to=Bridge.Int.clip32(Bridge.as(StudentScheduler.App.Gid("get-time-to-hh"),HTMLInputElement).valueAsNumber*60+Bridge.as(StudentScheduler.App.Gid("get-time-to-mm"),HTMLInputElement).valueAsNumber);if((from+45|0)>to){StudentScheduler.App.RemoveHourInDay();return}($t=collection.getItem(StudentScheduler.App.lastSetId).minutesFromAvailable)[System.Array.index(StudentScheduler.App.dayId,$t)]=from;($t1=collection.getItem(StudentScheduler.App.lastSetId).minutesToAvailable)[System.Array.index(StudentScheduler.App.dayId,$t1)]=to},RemoveHourInDay:function(){var $t,$t1,collection=StudentScheduler.App.lastSetWasTeacher?StudentScheduler.App.plan.teachers:StudentScheduler.App.plan.students;($t=collection.getItem(StudentScheduler.App.lastSetId).minutesFromAvailable)[System.Array.index(StudentScheduler.App.dayId,$t)]=0;($t1=collection.getItem(StudentScheduler.App.lastSetId).minutesToAvailable)[System.Array.index(StudentScheduler.App.dayId,$t1)]=0},Gid:function(id){return document.getElementById(id)},Gcl:function(cls){return System.Linq.Enumerable.from(document.body.getElementsByClassName(cls)).toArray()}}}});Bridge.define("StudentScheduler.AppLogic.Plan",{fields:{students:null,teachers:null},ctors:{ctor:function(){this.$initialize();this.students=new(System.Collections.Generic.List$1(StudentScheduler.AppLogic.User).ctor);this.teachers=new(System.Collections.Generic.List$1(StudentScheduler.AppLogic.User).ctor)}},methods:{Calc:function(){throw new System.NotImplementedException;}}});Bridge.define("StudentScheduler.AppLogic.User",{statics:{fields:{hourLength:0},ctors:{init:function(){this.hourLength=45}}},fields:{name:null,daysAvailable:null,minutesFromAvailable:null,minutesToAvailable:null,assignedConvertedMinutesFrom:0},ctors:{ctor:function(name,daysAvailable,minutesFromAvailable,minutesToAvailable){this.$initialize();this.name=name;this.daysAvailable=daysAvailable;this.minutesFromAvailable=minutesFromAvailable;this.minutesToAvailable=minutesToAvailable;this.assignedConvertedMinutesFrom=-1}},methods:{GetHoursInDay:function(dayIndex){if(dayIndex<0||dayIndex>=5)throw new System.ArgumentException("Parameter MUST BE in range [0; 5). Value: "+dayIndex,"dayIndex");if(!this.daysAvailable[System.Array.index(dayIndex,this.daysAvailable)])return"Není nastaveno";var minutesF=this.minutesFromAvailable[System.Array.index(dayIndex,this.minutesFromAvailable)],minutesT=this.minutesToAvailable[System.Array.index(dayIndex,this.minutesToAvailable)],hoursF=Bridge.Int.clip32(Math.floor(minutesF/60)),hoursT=Bridge.Int.clip32(Math.floor(minutesT/60));return System.String.format("Od {0}:{1} do {2}:{3}",Bridge.box(hoursF,System.Int32),System.Int32.format(minutesF-Bridge.Int.mul(hoursF,60)|0,"###"),Bridge.box(hoursT,System.Int32),System.Int32.format(minutesT-Bridge.Int.mul(hoursT,60)|0,"##"))}}})});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAiZmlsZSI6ICJTdHVkZW50U2NoZWR1bGVyLm1pbi5qcyIsCiAgInNvdXJjZVJvb3QiOiAiIiwKICAic291cmNlcyI6IFtdLAogICJuYW1lcyI6IFtdLAogICJtYXBwaW5ncyI6ICIiLAogICJzb3VyY2VzQ29udGVudCI6IFtdCn0K
