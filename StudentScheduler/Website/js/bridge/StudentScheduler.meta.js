Bridge.assembly("StudentScheduler", function ($asm, globals) {
    "use strict";


    var $m = Bridge.setMetadata,
        $n = [System,StudentScheduler.AppLogic,System.Collections.Generic,StudentScheduler.AppLogic.NetworkFlow,StudentScheduler];
    $m($n[4].App, function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":1,"n":"AddNewStudent","is":true,"t":8,"pi":[{"n":"sender","pt":HTMLElement,"ps":0}],"sn":"AddNewStudent","rt":$n[0].Void,"p":[HTMLElement]},{"a":1,"n":"AddNewTeacher","is":true,"t":8,"pi":[{"n":"sender","pt":HTMLElement,"ps":0}],"sn":"AddNewTeacher","rt":$n[0].Void,"p":[HTMLElement]},{"a":1,"n":"EditHoursClick","is":true,"t":8,"pi":[{"n":"sender","pt":$n[0].Object,"ps":0},{"n":"wasTeacher","pt":$n[0].Boolean,"ps":1}],"sn":"EditHoursClick","rt":$n[0].Void,"p":[$n[0].Object,$n[0].Boolean]},{"a":1,"n":"Gcl","is":true,"t":8,"pi":[{"n":"cls","pt":$n[0].String,"ps":0}],"sn":"Gcl","rt":HTMLCollection,"p":[$n[0].String]},{"a":1,"n":"Gid","is":true,"t":8,"pi":[{"n":"id","pt":$n[0].String,"ps":0}],"sn":"Gid","rt":HTMLElement,"p":[$n[0].String]},{"a":2,"n":"Main","is":true,"t":8,"sn":"Main","rt":$n[0].Void},{"a":1,"n":"MinutesToHoursAndMinutes","is":true,"t":8,"pi":[{"n":"minutes","pt":$n[0].Int32,"ps":0}],"sn":"MinutesToHoursAndMinutes","rt":$n[0].String,"p":[$n[0].Int32]},{"a":1,"n":"MyNumberToStringWithAtLeastTwoDigitsFormat","is":true,"t":8,"pi":[{"n":"number","pt":$n[0].Int32,"ps":0}],"sn":"MyNumberToStringWithAtLeastTwoDigitsFormat","rt":$n[0].String,"p":[$n[0].Int32]},{"a":1,"n":"RemoveHourInDay","is":true,"t":8,"sn":"RemoveHourInDay","rt":$n[0].Void},{"a":1,"n":"SaveHourChange","is":true,"t":8,"sn":"SaveHourChange","rt":$n[0].Void},{"a":1,"n":"SomeDayEditHoursClick","is":true,"t":8,"pi":[{"n":"sender","pt":$n[0].Object,"ps":0}],"sn":"SomeDayEditHoursClick","rt":$n[0].Void,"p":[$n[0].Object]},{"a":1,"n":"UpdateListOfDays","is":true,"t":8,"sn":"UpdateListOfDays","rt":$n[0].Void},{"a":1,"n":"dayId","is":true,"t":4,"rt":$n[0].Int32,"sn":"dayId","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"days","is":true,"t":4,"rt":$n[0].Array.type(System.String),"sn":"days"},{"a":1,"n":"lastSelectedDay","is":true,"t":4,"rt":$n[0].Int32,"sn":"lastSelectedDay","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"lastSetId","is":true,"t":4,"rt":$n[0].Int32,"sn":"lastSetId","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"lastSetWasTeacher","is":true,"t":4,"rt":$n[0].Boolean,"sn":"lastSetWasTeacher","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"plan","is":true,"t":4,"rt":$n[1].Plan,"sn":"plan"}]}; });
    $m($n[1].Plan, function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":1,"n":"BruteForceStudents","t":8,"sn":"BruteForceStudents$1","rt":$n[0].Void},{"a":1,"n":"BruteForceStudents","t":8,"pi":[{"n":"day","pt":$n[0].Int32,"ps":0},{"n":"startTime","pt":$n[0].Int32,"ps":1},{"n":"endTime","pt":$n[0].Int32,"ps":2},{"n":"studentsPossed","pt":$n[0].Int32,"ps":3}],"sn":"BruteForceStudents","rt":$n[2].List$1(StudentScheduler.AppLogic.BruteForcedStudent),"p":[$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Int32]},{"a":2,"n":"Calc","t":8,"sn":"Calc","rt":$n[0].Void},{"a":1,"n":"DoItUsingFlows","t":8,"sn":"DoItUsingFlows","rt":$n[0].Void},{"a":2,"n":"GenerateHTML","t":8,"sn":"GenerateHTML","rt":$n[0].String},{"a":1,"n":"IDontCareJustPossStudents","t":8,"sn":"IDontCareJustPossStudents","rt":$n[0].Void},{"a":1,"n":"PosNotPossedStudents","t":8,"sn":"PosNotPossedStudents","rt":$n[0].Void},{"a":1,"n":"PosStudents","t":8,"sn":"PosStudents","rt":$n[0].Void},{"a":1,"n":"TryToPosAllStudents","t":8,"sn":"TryToPosAllStudents","rt":$n[0].Void},{"a":1,"n":"TryToPosAllStudentsVer2","t":8,"sn":"TryToPosAllStudentsVer2","rt":$n[0].Void},{"a":1,"n":"breakAfterLessons","is":true,"t":4,"rt":$n[0].Int32,"sn":"breakAfterLessons","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"breakAfterLessonsLength","is":true,"t":4,"rt":$n[0].Int32,"sn":"breakAfterLessonsLength","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"breakAfterLessonsStart","t":4,"rt":$n[0].Array.type(System.Int32),"sn":"breakAfterLessonsStart"},{"a":2,"n":"lessonLength","is":true,"t":4,"rt":$n[0].Int32,"sn":"lessonLength","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"students","t":4,"rt":$n[2].List$1(StudentScheduler.AppLogic.User),"sn":"students"},{"a":2,"n":"teachers","t":4,"rt":$n[2].List$1(StudentScheduler.AppLogic.User),"sn":"teachers"}]}; });
    $m($n[1].BruteForcedStudent, function () { return {"att":1048840,"a":4,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[0].Int32,$n[1].User],"pi":[{"n":"minutesFrom","pt":$n[0].Int32,"ps":0},{"n":"student","pt":$n[1].User,"ps":1}],"sn":"$ctor1"},{"a":2,"n":"minutesFrom","t":4,"rt":$n[0].Int32,"sn":"minutesFrom","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"student","t":4,"rt":$n[1].User,"sn":"student"}]}; });
    $m($n[1].User, function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String,$n[0].Array.type(System.Boolean),$n[0].Array.type(System.Int32),$n[0].Array.type(System.Int32)],"pi":[{"n":"name","pt":$n[0].String,"ps":0},{"n":"daysAvailable","pt":$n[0].Array.type(System.Boolean),"ps":1},{"n":"minutesFromAvailable","pt":$n[0].Array.type(System.Int32),"ps":2},{"n":"minutesToAvailable","pt":$n[0].Array.type(System.Int32),"ps":3}],"sn":"ctor"},{"a":2,"n":"GetHoursInDay","t":8,"pi":[{"n":"dayIndex","pt":$n[0].Int32,"ps":0}],"sn":"GetHoursInDay","rt":$n[0].String,"p":[$n[0].Int32]},{"a":2,"n":"assigned","t":4,"rt":$n[0].Boolean,"sn":"assigned","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"assignedDay","t":4,"rt":$n[0].Int32,"sn":"assignedDay","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"assignedMinutes","t":4,"rt":$n[0].Int32,"sn":"assignedMinutes","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"daysAvailable","t":4,"rt":$n[0].Array.type(System.Boolean),"sn":"daysAvailable"},{"a":2,"n":"minutesFromAvailable","t":4,"rt":$n[0].Array.type(System.Int32),"sn":"minutesFromAvailable"},{"a":2,"n":"minutesToAvailable","t":4,"rt":$n[0].Array.type(System.Int32),"sn":"minutesToAvailable"},{"a":2,"n":"name","t":4,"rt":$n[0].String,"sn":"name"}]}; });
    $m($n[3].Edge, function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].Int32,$n[0].Int32,$n[3].Node,$n[3].Node],"pi":[{"n":"capacity","pt":$n[0].Int32,"ps":0},{"n":"currentFlow","pt":$n[0].Int32,"ps":1},{"n":"from","pt":$n[3].Node,"ps":2},{"n":"to","pt":$n[3].Node,"ps":3}],"sn":"ctor"},{"v":true,"a":2,"n":"GetCurrentFlow","t":8,"pi":[{"n":"currentPath","pt":$n[2].IEnumerable$1(StudentScheduler.AppLogic.NetworkFlow.Node),"ps":0},{"n":"flow","pt":$n[3].Flow,"ps":1},{"n":"info","pt":$n[0].String,"ps":2}],"sn":"GetCurrentFlow","rt":$n[0].Int32,"p":[$n[2].IEnumerable$1(StudentScheduler.AppLogic.NetworkFlow.Node),$n[3].Flow,$n[0].String],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"v":true,"a":2,"n":"SetCurrentFlow","t":8,"pi":[{"n":"newValue","pt":$n[0].Int32,"ps":0}],"sn":"SetCurrentFlow","rt":$n[0].Void,"p":[$n[0].Int32]},{"a":2,"n":"Capacity","t":4,"rt":$n[0].Int32,"sn":"Capacity","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"From","t":4,"rt":$n[3].Node,"sn":"From"},{"a":2,"n":"To","t":4,"rt":$n[3].Node,"sn":"To"},{"a":1,"n":"currentFlow","t":4,"rt":$n[0].Int32,"sn":"currentFlow","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; });
    $m($n[3].Flow, function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[1].User,$n[2].List$1(StudentScheduler.AppLogic.User)],"pi":[{"n":"teacher","pt":$n[1].User,"ps":0},{"n":"students","pt":$n[2].List$1(StudentScheduler.AppLogic.User),"ps":1}],"sn":"ctor"},{"a":1,"n":"AddNodeAfter","t":8,"pi":[{"n":"identifier","pt":$n[0].String,"ps":0},{"n":"newNode","pt":$n[3].Node,"ps":1}],"sn":"AddNodeAfter","rt":$n[0].Void,"p":[$n[0].String,$n[3].Node]},{"a":1,"n":"ApplyFlow","t":8,"pi":[{"n":"rootNode","pt":$n[3].Node,"ps":0},{"n":"endNode","pt":$n[3].Node,"ps":1},{"n":"flowPath","pt":$n[2].Dictionary$2(StudentScheduler.AppLogic.NetworkFlow.Node,StudentScheduler.AppLogic.NetworkFlow.Node),"ps":2}],"sn":"ApplyFlow","rt":$n[0].Void,"p":[$n[3].Node,$n[3].Node,$n[2].Dictionary$2(StudentScheduler.AppLogic.NetworkFlow.Node,StudentScheduler.AppLogic.NetworkFlow.Node)]},{"a":1,"n":"ApplyStudent","t":8,"pi":[{"n":"result","pt":$n[3].Flow.AssignmentPreview,"ps":0}],"sn":"ApplyStudent","rt":$n[0].Void,"p":[$n[3].Flow.AssignmentPreview]},{"a":1,"n":"BuildGraph","t":8,"pi":[{"n":"day","pt":$n[0].Int32,"ps":0},{"n":"bannedTimespanFrom","dv":-1,"o":true,"pt":$n[0].Int32,"ps":1},{"n":"bannedTimespanTo","dv":-1,"o":true,"pt":$n[0].Int32,"ps":2}],"sn":"BuildGraph","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32,$n[0].Int32]},{"a":1,"n":"CreateNewFlow","t":8,"sn":"CreateNewFlow","rt":$n[0].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"DEBUG_WriteFlowPath","t":8,"pi":[{"n":"FlowPath","pt":$n[2].Dictionary$2(StudentScheduler.AppLogic.NetworkFlow.Node,StudentScheduler.AppLogic.NetworkFlow.Node),"ps":0}],"sn":"DEBUG_WriteFlowPath","rt":$n[0].Void,"p":[$n[2].Dictionary$2(StudentScheduler.AppLogic.NetworkFlow.Node,StudentScheduler.AppLogic.NetworkFlow.Node)]},{"a":1,"n":"GetEdgeInfo","t":8,"pi":[{"n":"node1","pt":$n[3].Node,"ps":0},{"n":"node2","pt":$n[3].Node,"ps":1}],"sn":"GetEdgeInfo","rt":$n[3].Flow.EdgeInfo,"p":[$n[3].Node,$n[3].Node]},{"a":2,"n":"GetResult","t":8,"sn":"GetResult","rt":$n[0].Array.type(System.Int32)},{"a":1,"n":"GetResultFromGraph","t":8,"pi":[{"n":"day","pt":$n[0].Int32,"ps":0}],"sn":"GetResultFromGraph","rt":$n[2].List$1(StudentScheduler.AppLogic.NetworkFlow.Flow.AssignmentPreview),"p":[$n[0].Int32]},{"a":1,"n":"RenderPath","t":8,"pi":[{"n":"rootNode","pt":$n[3].Node,"ps":0},{"n":"endNode","pt":$n[3].Node,"ps":1},{"n":"flowPath","pt":$n[2].Dictionary$2(StudentScheduler.AppLogic.NetworkFlow.Node,StudentScheduler.AppLogic.NetworkFlow.Node),"ps":2}],"sn":"RenderPath","rt":$n[2].List$1(StudentScheduler.AppLogic.NetworkFlow.Node),"p":[$n[3].Node,$n[3].Node,$n[2].Dictionary$2(StudentScheduler.AppLogic.NetworkFlow.Node,StudentScheduler.AppLogic.NetworkFlow.Node)]},{"a":1,"n":"Start","t":8,"sn":"Start","rt":$n[0].Void},{"ov":true,"a":2,"n":"ToString","t":8,"sn":"toString","rt":$n[0].String},{"a":2,"n":"Nodes","t":16,"rt":$n[2].List$1(StudentScheduler.AppLogic.NetworkFlow.Node),"g":{"a":2,"n":"get_Nodes","t":8,"rt":$n[2].List$1(StudentScheduler.AppLogic.NetworkFlow.Node),"fg":"Nodes"},"s":{"a":1,"n":"set_Nodes","t":8,"p":[$n[2].List$1(StudentScheduler.AppLogic.NetworkFlow.Node)],"rt":$n[0].Void,"fs":"Nodes"},"fn":"Nodes"},{"a":1,"n":"students","t":4,"rt":$n[2].List$1(StudentScheduler.AppLogic.User),"sn":"students"},{"a":1,"n":"teacher","t":4,"rt":$n[1].User,"sn":"teacher"}]}; });
    $m($n[3].Flow.EdgeInfo, function () { return {"td":$n[3].Flow,"att":1048843,"a":1,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"IsFromNode1ToNode2","t":4,"rt":$n[0].Boolean,"sn":"IsFromNode1ToNode2","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"ResultEdge","t":4,"rt":$n[3].Edge,"sn":"ResultEdge"}]}; });
    $m($n[3].Flow.AssignmentPreview, function () { return {"td":$n[3].Flow,"att":1048843,"a":1,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"assignedStudent","t":4,"rt":$n[1].User,"sn":"assignedStudent"},{"a":2,"n":"day","t":4,"rt":$n[0].Int32,"sn":"day","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"timeStart","t":4,"rt":$n[0].Int32,"sn":"timeStart","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; });
    $m($n[3].Node, function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].String,$n[0].Int32,$n[3].Node.NodeType],"pi":[{"n":"identifier","pt":$n[0].String,"ps":0},{"n":"value","pt":$n[0].Int32,"ps":1},{"n":"type","pt":$n[3].Node.NodeType,"ps":2}],"sn":"ctor"},{"a":2,"n":"Identifier","t":4,"rt":$n[0].String,"sn":"Identifier"},{"a":2,"n":"InputEdges","t":4,"rt":$n[2].List$1(StudentScheduler.AppLogic.NetworkFlow.Edge),"sn":"InputEdges"},{"a":2,"n":"OutputEdges","t":4,"rt":$n[2].List$1(StudentScheduler.AppLogic.NetworkFlow.Edge),"sn":"OutputEdges"},{"a":2,"n":"Type","t":4,"rt":$n[3].Node.NodeType,"sn":"Type","box":function ($v) { return Bridge.box($v, StudentScheduler.AppLogic.NetworkFlow.Node.NodeType, System.Enum.toStringFn(StudentScheduler.AppLogic.NetworkFlow.Node.NodeType));}},{"a":2,"n":"Value","t":4,"rt":$n[0].Int32,"sn":"Value","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; });
    $m($n[3].Node.NodeType, function () { return {"td":$n[3].Node,"att":258,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Default","is":true,"t":4,"rt":$n[3].Node.NodeType,"sn":"Default","box":function ($v) { return Bridge.box($v, StudentScheduler.AppLogic.NetworkFlow.Node.NodeType, System.Enum.toStringFn(StudentScheduler.AppLogic.NetworkFlow.Node.NodeType));}},{"a":2,"n":"Input","is":true,"t":4,"rt":$n[3].Node.NodeType,"sn":"Input","box":function ($v) { return Bridge.box($v, StudentScheduler.AppLogic.NetworkFlow.Node.NodeType, System.Enum.toStringFn(StudentScheduler.AppLogic.NetworkFlow.Node.NodeType));}},{"a":2,"n":"Output","is":true,"t":4,"rt":$n[3].Node.NodeType,"sn":"Output","box":function ($v) { return Bridge.box($v, StudentScheduler.AppLogic.NetworkFlow.Node.NodeType, System.Enum.toStringFn(StudentScheduler.AppLogic.NetworkFlow.Node.NodeType));}}]}; });
    $m($n[3].TimeChunk, function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[3].Node,$n[3].Node],"pi":[{"n":"from","pt":$n[3].Node,"ps":0},{"n":"to","pt":$n[3].Node,"ps":1}],"sn":"ctor"},{"a":1,"n":"GetBlockingNodes","t":8,"pi":[{"n":"timeNodes","pt":$n[2].IEnumerable$1(StudentScheduler.AppLogic.NetworkFlow.Node),"ps":0},{"n":"baseNode","pt":$n[3].Node,"ps":1}],"sn":"GetBlockingNodes","rt":$n[0].Int32,"p":[$n[2].IEnumerable$1(StudentScheduler.AppLogic.NetworkFlow.Node),$n[3].Node],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"ov":true,"a":2,"n":"GetCurrentFlow","t":8,"pi":[{"n":"currentPath","pt":$n[2].IEnumerable$1(StudentScheduler.AppLogic.NetworkFlow.Node),"ps":0},{"n":"flow","pt":$n[3].Flow,"ps":1},{"n":"info","pt":$n[0].String,"ps":2}],"sn":"GetCurrentFlow","rt":$n[0].Int32,"p":[$n[2].IEnumerable$1(StudentScheduler.AppLogic.NetworkFlow.Node),$n[3].Flow,$n[0].String],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"ov":true,"a":2,"n":"SetCurrentFlow","t":8,"pi":[{"n":"newValue","pt":$n[0].Int32,"ps":0}],"sn":"SetCurrentFlow","rt":$n[0].Void,"p":[$n[0].Int32]}]}; });
});
